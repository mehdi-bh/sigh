// Test foreach
var arr: Float[] = [1,2,3,4,5]
var lc: Float[] = [x + 100 for var x: Float # arr]

var lesStrings: String[] = ["a", "b", "c"]
var strs: String[] = [s + " test" for var s: Any # arr]

fun add(a: Float): Float{
    return a * 5;
}

var lc2: Float[] = [add(x) for var x: Float # arr]

fun printList(a: Any[]){
    var i: Int = 0
    while i < a.length {
        print("value : "+a[i])
        i = i + 1
    }
}

fun printListStr(a: String[]){
    var i: Int = 0
    while i < a.length {
        print("value : "+a[i])
        i = i + 1
    }

}

fun printListFloat(a: Float[]){
    var i: Int = 0
    while i < a.length {
        print("value : "+a[i])
        i = i + 1
    }
}
//testListCompr(arr)
printList(lc)
printList(strs)
printList(lc2)

foreach (var i: Float # lc)
{
    var j: Float = i * 4
    print("" + j)
}


// Méthode générique
fun sum (a: Any[]): Any
{
    var j: Float = 0
    foreach (var i: Any # a)
    {
        j = j + i
    }
    return j
}

var arr: Float[] = [1,2,3,4,5]
sum(arr)
//var sss: Float = sum(lc)
//print("" + sss)

// Variable type
var i: Any = 4
print(i)

// Test généricité paires
struct Pair {
    var a: Any
    var b: Any
}

fun sum_pair (pair: Pair): Any {
    return pair.a + pair.b
}

print(sum_pair($Pair(2, 3)))
